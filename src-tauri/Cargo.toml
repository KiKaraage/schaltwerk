[package]
name = "schaltwerk"
version = "0.3.2"
description = "AI-powered git worktree session manager for isolated development environments"
authors = ["Schaltwerk Contributors"]
license = "MIT"
repository = "https://github.com/schaltwerk/schaltwerk"
homepage = "https://github.com/schaltwerk/schaltwerk"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[[bin]]
name = "schaltwerk"
path = "src/main.rs"

[lib]
name = "schaltwerk"
path = "src/lib.rs"
doctest = false


[build-dependencies]
tauri-build = { version = "2", features = [] }

[dependencies]
mimalloc = { version = "0.1", default-features = false }
tauri = { version = "2", features = [] }
tauri-plugin-dialog = "2.4"
serde = { version = "1", features = ["derive"] }
serde_json = "1"
portable-pty = "0.9.0"
anyhow = "1.0.100"
tokio = { version = "1.48.0", features = ["macros", "rt", "process", "sync", "io-util", "time", "net"] }
async-trait = "0.1"
log = "0.4"
env_logger = "0.11"
chrono = { version = "0.4", features = ["serde"] }
memchr = "2.7"
dirs = "6.0"
which = "8.0"
rusqlite = { version = "0.37", features = ["bundled", "chrono"] }
r2d2 = "0.8"
uuid = { version = "1.18", features = ["v4", "serde"] }
walkdir = "2.5"
git2 = { version = "0.20", features = ["vendored-libgit2", "vendored-openssl"] }
sha2 = "0.10"
hyper = { version = "1.7", default-features = false, features = ["server", "http1"] }
hyper-util = { version = "0.1", default-features = false, features = ["tokio"] }
http-body-util = "0.1"
urlencoding = "2.1"
url = "2.5"
getrandom = "0.3"
shell-words = "1.1"
toml = "0.9"
futures = "0.3"
clap = { version = "4", features = ["derive"] }
notify = "8"
notify-debouncer-mini = "0.7"
similar = "2.6"
fontdb = "0.23"
base64 = "0.22"
libc = "0.2"
dashmap = "6"
pty_host = { path = "crates/pty_host" }
vt100 = "0.16"

[target.'cfg(target_os = "macos")'.dependencies]
arboard = "3.4"
core-foundation = "0.10"
core-foundation-sys = "0.8"

[target.'cfg(target_os = "linux")'.dependencies]
arboard = "3.4"

[target.'cfg(not(any(target_os = "android", target_os = "ios")))'.dependencies]
tauri-plugin-updater = "2"
tauri-plugin-os = "2"

[dev-dependencies]
tokio-test = "0.4"
mockall = "0.13"
tempfile = "3.23"
serial_test = "3.1"
filetime = "0.2"

[lints.rust]
dead_code = "warn"
unused_imports = "warn"
unused_variables = "warn"
unused_mut = "warn"

[lints.clippy]
# Useful warnings
uninlined_format_args = "warn"
needless_borrow = "warn"
semicolon_if_nothing_returned = "warn"
# Allow these for Tauri/macro generated code
missing_panics_doc = "allow"
missing_errors_doc = "allow"
must_use_candidate = "allow"

[profile.release]
opt-level = 3
lto = true
codegen-units = 1
panic = 'abort'
strip = true

[profile.ci]
inherits = "release"
lto = "thin"
codegen-units = 16

# Standard dev profile - optimized for fast compilation
[profile.dev]
opt-level = 0
debug = 0
split-debuginfo = "unpacked"
incremental = true
overflow-checks = false

# Dependencies get minimal optimization for fastest compile
[profile.dev.package."*"]
opt-level = 0
debug = false

[profile.dev.build-override]
opt-level = 0
debug = false

# Production-like dev profile for performance testing
[profile.dev-opt]
inherits = "dev"
opt-level = 1
debug = 0
split-debuginfo = "unpacked"
incremental = true
overflow-checks = false

# Dependencies get high optimization for better runtime performance
[profile.dev-opt.package."*"]
opt-level = 3
debug = false

[profile.dev-opt.build-override]
opt-level = 3
debug = false

# Test profile uses minimal optimization for fastest compilation
[profile.test]
opt-level = 0
debug = 0
split-debuginfo = "unpacked"
incremental = true
overflow-checks = false

[profile.test.package."*"]
opt-level = 0
debug = false

[profile.test.build-override]
opt-level = 0
debug = false
